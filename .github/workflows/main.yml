name: Build and Release .NET Framework App

on:
  push:
    branches: [ "master" ]
    tags: [ "v*" ]  # 当推送 v1.0.0 这样的标签时触发 Release
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        configuration: [Release]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Restore NuGet packages
        run: nuget restore RunMe.csproj

      - name: Build project
        run: |
          msbuild RunMe.csproj `
            /p:Configuration=${{ matrix.configuration }} `
            /p:Platform="AnyCPU" `
            /p:TargetFrameworkVersion=v4.7.2 `
            /p:OutputPath=bin\${{ matrix.configuration }} `
            /p:BaseOutputPath=bin\

      - name: Upload build artifacts (临时产物)
        uses: actions/upload-artifact@v4
        with:
          name: RunMe-Build
          path: |
            bin/Release/*.exe

      # 仅在推送标签时创建 Release（如 v1.0.0）
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')  # 只在标签推送时执行
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      # 上传产物到 Release 资产
      - name: Upload Release Assets
        if: startsWith(github.ref, 'refs/tags/')  # 只在标签推送时执行
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/Release/RunMe.exe  # 替换为你的程序路径
          asset_name: RunMe.exe
          asset_content_type: application/exe